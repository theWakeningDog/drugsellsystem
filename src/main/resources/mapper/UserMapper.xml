<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellsystem.dao.UserDao">
    <sql id="createUserSQL">
        createUser.id createUserId, createUser.no createUserNo, createUser.name createUserName, createUser.account createUserAccount, createUser.password createUserPassword,
        createUser.age createUserAge, createUser.email createUserEmail, createUser.longitude createUserLongitude,
        createUser.latitude createUserLatitude, createUser.createTime createUserCreateTime, createUser.remark createUserRemark, createUser.delete createUserDelete
    </sql>
    <resultMap id="createUserResult" type="User">
        <id property="id" column="createUserId"/>
        <result property="no" column="createUserNo"/>
        <result property="name" column="createUserName"/>
        <result property="account" column="createUserAccount"/>
        <result property="password" column="createUserPassword"/>
        <result property="age" column="createUserAge"/>
        <result property="email" column="createUserEmail"/>
        <result property="longitude" column="createUserLongitude"/>
        <result property="latitude" column="createUserLatitude"/>
        <result property="createTime" column="createUserCreateTime"/>
        <result property="remark" column="createUserRemark"/>
        <result property="delete" column="createUserDelete"/>
    </resultMap>

    <sql id="userSQL">
        user.id userId, user.no userNo, user.name userName, user.account userAccount, user.password userPassword, user.age userAge, user.email userEmail,
        user.longitude userLongitude, user.latitude userLatitude,user.createTime userCreateTime, user.remark userRemark, user.delete userDelete
    </sql>
    <resultMap id="userResult" type="User">
        <id property="id" column="userId"/>
        <result property="no" column="userNo"/>
        <result property="name" column="userName"/>
        <result property="account" column="userAccount"/>
        <result property="password" column="userPassword"/>
        <result property="age" column="userAge"/>
        <result property="email" column="userEmail"/>
        <result property="longitude" column="userLongitude"/>
        <result property="latitude" column="userLatitude"/>
        <result property="createTime" column="userCreateTime"/>
        <result property="remark" column="userRemark"/>
        <result property="delete" column="userDelete"/>
    </resultMap>

    <select id="getList" resultMap="userResult">
        select
        <include refid="userSQL"/>
        from user user
        <where>
            <if test="userSearchModel.keyword != null and userSearchModel.keyword != ''">
                <bind name="keyword" value="'%' + userSearchModel.getKeyword() + '%'"/>
                name like #{keyword}
                or account like #{keyword}
            </if>
            and user.`delete` = 0
        </where>
    </select>

    <select id="getUser" resultMap="userResult">
        select
        <include refid="userSQL"/>
        from user user
        where user.id = #{userId}
    </select>

    <select id="getUserByAccount" resultMap="userResult">
        select
         <include refid="userSQL"/>
         from user user
        where user.account = #{account}
    </select>

    <insert id="create">
        <selectKey keyProperty="user.id" resultType="java.lang.String" order="BEFORE">
            select uuid()
        </selectKey>
        insert into user values (#{user.id}, #{user.no}, #{user.name}, #{user.account}, #{user.password}, #{user.age}, #{user.tel},
        #{user.email}, #{user.longitude}, #{user.latitude}, #{user.remark}, #{user.createTime}, #{user.delete});
    </insert>

    <update id="update">
        update user
        <set>
            <if test="user.no != null">`no` = #{user.no},</if>
            <if test="user.name != null">`name` = #{user.name},</if>
            <if test="user.account != null">`account` = #{user.account},</if>
            <if test="user.password != null">password = #{user.password},</if>
            <if test="user.age != null">age = #{user.age},</if>
            tel = null,
            <if test="user.email != null">email = #{user.email},</if>
            <if test="user.longitude != null">longitude = #{user.longitude},</if>
            <if test="user.latitude != null">latitude = #{user.latitude},</if>
            <if test="user.remark != null">remark = #{user.remark},</if>
            <if test="user.createTime != null">createTime = #{user.createTime},</if>
            <if test="user.delete != null">`delete` = #{user.delete}</if>
        </set>
        where id = #{user.id}
    </update>

    <select id="getMaxTimeUser" resultType="user">
        select * from user where createTime = (select max(createTime) from user)
    </select>

    <delete id="delete">
        delete from user where id in
        <foreach collection="userIdList" item="userId" index="index" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>