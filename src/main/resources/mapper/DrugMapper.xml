<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellsystem.dao.DrugDao">
    <sql id="drugSQL">
        drug.id drugId, drug.name drugName, drug.origin drugOrigin,
        drug.unit drugUnit, drug.number drugNumber, drug.purchase drugPurchase, drug.retail drugRetail,
        drug.period drugPeriod, drug.createTime drugCreateTime, drug.remark drugRemark
    </sql>

    <resultMap id="drugResult" type="Drug">
        <id property="id" column="drugId"/>
        <result property="name" column="drugName"/>
        <result property="origin" column="drugOrigin"/>
        <result property="unit" column="drugUnit"/>
        <result property="number" column="drugNumber"/>
        <result property="purchase" column="drugPurchase"/>
        <result property="retail" column="drugRetail"/>
        <result property="period" column="drugPeriod"/>
        <result property="createTime" column="drugCreateTime"/>
        <result property="remark" column="drugRemark"/>
        <association property="sort" column="drugSort" resultMap="com.sellsystem.dao.SortDao.sortResult"/>
        <association property="warehouse" column="drugWarehouse"
                     resultMap="com.sellsystem.dao.WarehouseDao.warehouseResult"/>
        <association property="createUser" resultMap="com.sellsystem.dao.UserDao.createUserResult"/>
        <association property="customer" resultMap="com.sellsystem.dao.CustomerDao.customerResult"/>
        <association property="task" resultMap="com.sellsystem.dao.TaskDao.taskResult"/>
    </resultMap>

    <select id="getList" resultMap="drugResult">
        SELECT
        <include refid="drugSQL"/>,
        <include refid="com.sellsystem.dao.SortDao.sortSQL"/>,
        <include refid="com.sellsystem.dao.WarehouseDao.warehouseSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>,
        <include refid="com.sellsystem.dao.CustomerDao.customerSQL"/>,
        <include refid="com.sellsystem.dao.TaskDao.taskSQL"/>
        FROM
        drug drug
        LEFT JOIN sort sort ON drug.sort = sort.id
        LEFT JOIN warehouse warehouse ON drug.warehouse = warehouse.id
        LEFT JOIN  user createUser ON createUser.id = drug.createUser
        LEFT JOIN customer customer ON customer.id = drug.customer
        LEFT JOIN task task ON task.id = drug.task
        <where>
            <if test="drugSearchModel.name != null">
                <bind name="namePattern" value="'%' + drugSearchModel.getName() + '%'"/>
                drug.name LIKE #{namePattern}
            </if>
            <if test="drugSearchModel.warehouseId != null">
                and drug.warehouse = #{drugSearchModel.warehouseId}
            </if>
            <if test="drugSearchModel.sortId != null">
                and drug.sort = #{drugSearchModel.sortId}
            </if>
            <if test="drugSearchModel.periodTime != null and drugSearchModel.periodTime != ''">
                and drugSearchModel.periodTime between #{drugSearchModel.periodTimeStart} and
                #{drugSearchModel.periodTimeEnd}
            </if>
            and drug.number > 0
        </where>
        order by drug.createTime desc
    </select>

    <select id="getDrug" parameterType="java.lang.String" resultMap="drugResult">
        SELECT
        <include refid="drugSQL"/>,
        <include refid="com.sellsystem.dao.SortDao.sortSQL"/>,
        <include refid="com.sellsystem.dao.WarehouseDao.warehouseSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>,
        <include refid="com.sellsystem.dao.CustomerDao.customerSQL"/>,
        <include refid="com.sellsystem.dao.TaskDao.taskSQL"/>
        FROM
        drug drug
        LEFT JOIN sort sort ON drug.sort = sort.id
        LEFT JOIN warehouse warehouse ON drug.warehouse = warehouse.id
        LEFT JOIN  user createUser ON createUser.id = drug.createUser
        LEFT JOIN customer customer on customer.id = drug.customer
        LEFT JOIN task task ON task.id = drug.task
        WHERE drug.id = #{drugId}
    </select>

    <select id="getDrugByTask" resultMap="drugResult">
        SELECT
        <include refid="drugSQL"/>,
        <include refid="com.sellsystem.dao.SortDao.sortSQL"/>,
        <include refid="com.sellsystem.dao.WarehouseDao.warehouseSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>,
        <include refid="com.sellsystem.dao.CustomerDao.customerSQL"/>,
        <include refid="com.sellsystem.dao.TaskDao.taskSQL"/>
        FROM
        drug drug
        LEFT JOIN sort sort ON drug.sort = sort.id
        LEFT JOIN warehouse warehouse ON drug.warehouse = warehouse.id
        LEFT JOIN  user createUser ON createUser.id = drug.createUser
        LEFT JOIN customer customer on customer.id = drug.customer
        LEFT JOIN task task ON task.id = drug.task
        WHERE drug.task = #{taskId}
    </select>

    <insert id="create">
        <selectKey keyProperty="drug.id" resultType="java.lang.String" order="BEFORE">
            select uuid() from dual;
        </selectKey>
        insert into drug values (#{drug.id}, #{drug.name}, #{drug.origin}, #{drug.unit}, #{drug.number},
        #{drug.purchase}, #{drug.retail}, #{drug.period}, #{drug.sort.id}, #{drug.warehouse.id}, #{drug.createTime},
        #{drug.remark}, #{drug.createUser.id}, #{drug.customer.id},#{drug.task.id});
    </insert>

    <update id="update">
        update drug
        <set>
            <if test="drug.name != null">name = #{drug.name},</if>
            <if test="drug.origin != null">origin = #{drug.origin},</if>
            <if test="drug.unit != null">unit = #{drug.unit},</if>
            <if test="drug.number != null">number = #{drug.number},</if>
            <if test="drug.purchase != null">purchase = #{drug.purchase},</if>
            <if test="drug.retail != null">retail = #{drug.retail},</if>
            <if test="drug.period != null">period = #{drug.period},</if>
            <if test="drug.sort != null and drug.sort.id != null">sortId = #{drug.sort.id},</if>
            <if test="drug.warehouse != null and drug.warehouse.id != null">warehouseId = #{drug.warehouse.id},</if>
            <if test="drug.createTime != null">createTime = #{drug.createTime},</if>
            <if test="drug.remark != null">remark = #{drug.remark},</if>
            <if test="drug.createUser != null and drug.createUser.id != null">createUser = #{drug.createUser},</if>
            <if test="drug.customer != null and drug.customer.id != null">customer = #{drug.customer},</if>
            <if test="drug.task != null and drug.task.id != null">task = #{drug.task}</if>
        </set>
        where id = #{drug.id}
    </update>

    <select id="getDrugLessThan30" resultMap="drugResult">
        SELECT
        <include refid="drugSQL"/>,
        <include refid="com.sellsystem.dao.SortDao.sortSQL"/>,
        <include refid="com.sellsystem.dao.WarehouseDao.warehouseSQL"/>
        FROM
        drug drug
        LEFT JOIN sort sort ON drug.sort = sort.id
        LEFT JOIN warehouse warehouse ON drug.warehouse = warehouse.id
        where  30 >= drug.number
    </select>

    <select id="getSumBySort" resultType="java.util.Map">
        SELECT SUM(drug.number) `value`, sort.name name FROM `drug` drug left join sort sort on drug.sort = sort.id group by sort.name
    </select>

</mapper>