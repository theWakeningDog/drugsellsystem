<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellsystem.dao.CustomerDao">
    <sql id="customerSQL">
        customer.id customerId, customer.name customerName, customer.phone customerPhone,
        customer.type customerType, customer.address customerAddress, customer.longitude customerLongitude, customer.latitude customerLatitude,
        customer.createUser customerCreateUser, customer.isDelete customerIsDelete,
        customer.createTime customerCreateTime, customer.remark customerRemark
    </sql>

    <resultMap id="customerResult" type="Customer">
        <id property="id" column="customerId"/>
        <result property="name" column="customerName"/>
        <result property="phone" column="customerPhone"/>
        <result property="type" column="customerType"/>
        <result property="address" column="customerAddress"/>
        <result property="longitude" column="customerLongitude"/>
        <result property="latitude" column="customerLatitude"/>
        <result property="isDelete" column="customerIsDelete"/>
        <result property="createTime" column="customerCreateTime"/>
        <result property="remark" column="customerRemark"/>
        <association property="createUser" column="customerCreateUser" resultMap="com.sellsystem.dao.UserDao.createUserResult"/>
    </resultMap>

    <select id="getList" resultMap="customerResult">
        select
        <include refid="customerSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>
        from customer customer
        left join user createUser on customer.createUser = createUser.id
    </select>

    <select id="getCustomer" resultMap="customerResult">
        select
        <include refid="customerSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>
        from customer customer
        left join user createUser on customer.createUser = createUser.id
        where customer.id = #{customerId}
    </select>

    <insert id="create">
        <selectKey keyProperty="customer.id" resultType="java.lang.String" order="BEFORE">
            select uuid()
        </selectKey>
        insert into customer values (#{customer.id}, #{customer.name}, #{customer.phone}, null, #{customer.type},
        #{customer.address}, #{customer.longitude}, #{customer.latitude}, #{customer.createUser.id}, #{customer.isDelete}, #{customer.createTime}, #{customer.remark});
    </insert>

    <update id="update">
        update task
        <set>
            <if test="customer.id != null">id = #{customer.id},</if>
            <if test="customer.name != null">name = #{customer.name},</if>
            <if test="customer.phone != null">customer = #{customer.phone},</if>
            <if test="customer.type != null">type = #{customer.type},</if>
            <if test="customer.address != null">address = #{customer.address},</if>
            <if test="customer.longitude != null">longitude = #{customer.longitude},</if>
            <if test="customer.latitude != null">latitude = #{customer.latitude},</if>
            <if test="customer.createUser != null and customer.createUser.id != null">createUser = #{customer.createUser.id},</if>
            <if test="customer.isDelete != null">isDelete = #{customer.isDelete}</if>
            <if test="customer.createTime != null">createTime = #{customer.createTime},</if>
            <if test="customer.remark != null">remark = #{customer.remark}</if>
        </set>
    </update>

    <delete id="delete">
        delete from customer where id in
        <foreach collection="customerIdList" item="customerId" index="index" open="(" separator="," close=")">
            #{customerId}
        </foreach>
    </delete>
</mapper>