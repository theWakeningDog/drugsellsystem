<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellsystem.dao.TaskDao">
    <sql id="taskSQL">
        task.id taskId, task.name taskName, task.supplier taskSupplier, task.customer taskCustomer, task.state taskState,
        task.level taskLevel, task.type taskType, task.executor taskExecutor, task.createUser taskCreateUser,
        task.attachment taskAttachment, task.description taskDescription, task.content taskContent, task.createTime taskCreateTime,
        task.completeTime taskCompleteTime, task.endTime taskEndTime, task.isDelete taskIsDelete
    </sql>

    <resultMap id="taskResult" type="Task">
        <id property="id" column="taskId"/>
        <result property="name" column="taskName"/>
        <result property="state" column="taskState"/>
        <result property="type" column="taskType"/>
        <result property="level" column="taskLevel"/>
        <result property="attachment" column="taskAttachment"/>
        <result property="description" column="taskDescription"/>
        <result property="content" column="taskContent"/>
        <result property="createTime" column="taskCreateTime"/>
        <result property="completeTime" column="taskCompleteTime"/>
        <result property="endTime" column="taskEndTime"/>
        <result property="isDelete" column="taskIsDelete"/>
        <association property="supplier" column="taskSupplier" resultMap="com.sellsystem.dao.SupplierDao.supplierResult"/>
        <association property="customer" column="taskCustomer" resultMap="com.sellsystem.dao.CustomerDao.customerResult"/>
        <association property="executor" column="taskExecutor" resultMap="com.sellsystem.dao.UserDao.userResult"/>
        <association property="createUser" column="taskCreateUser" resultMap="com.sellsystem.dao.UserDao.createUserResult"/>
    </resultMap>

    <select id="getList" resultMap="taskResult">
        SELECT
            <include refid="taskSQL"/>,
            <include refid="com.sellsystem.dao.CustomerDao.customerSQL"/>,
            <include refid="com.sellsystem.dao.UserDao.userSQL"/>,
            <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>
        FROM
            task task
        LEFT JOIN supplier supplier ON task.supplier = supplier.id
        LEFT JOIN customer customer ON task.customer = customer.id
        LEFT JOIN `user` `user` ON task.executor = `user`.id
        LEFT JOIN `user` createUser ON task.createUser = createUser.id
        <where>
            <if test="taskSearchModel.name != null">
                <bind name="namePattern" value="'%' + taskSearchModel.getName() + '%'"/>
                task.name like #{namePattern}
            </if>
            <if test="taskSearchModel.type != null and taskSearchModel.type != ''">
                and task.type = #{taskSearchModel.type}
            </if>
            <if test="taskSearchModel.level != null and taskSearchModel.level != ''">
                andtask.level = #{taskSearchModel.level}
            </if>
            <if test="taskSearchModel.createTime != null and taskSearchModel.createTime != ''">
              and task.createTime BETWEEN #{taskSearchModel.createTimeStart} AND #{taskSearchModel.createTimeEnd}
            </if>
            <if test="taskSearchModel.customerId != null and taskSearchModel.customerId != ''">
                and task.customer = #{taskSearchModel.customerId}
            </if>
            and task.isDelete = 0
        </where>
        ORDER BY taskCreateTime DESC
    </select>

    <select id="getTask" resultMap="taskResult">
        SELECT
        <include refid="taskSQL"/>,
        <include refid="com.sellsystem.dao.CustomerDao.customerSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.userSQL"/>,
        <include refid="com.sellsystem.dao.UserDao.createUserSQL"/>
        FROM
        task task
        LEFT JOIN supplier supplier ON task.supplier = supplier.id
        LEFT JOIN customer customer ON task.customer = customer.id
        LEFT JOIN `user` `user` ON task.executor = `user`.id
        LEFT JOIN `user` createUser ON task.createUser = createUser.id
        WHERE task.id = #{taskId}
    </select>

    <insert id="create">
       <selectKey keyProperty="task.id" resultType="java.lang.String" order="BEFORE">
              select uuid()
       </selectKey>
        insert into task values (#{task.id}, #{task.name}, null, #{task.customer.id}, #{task.state}, #{task.type}, #{task.level},
        #{task.executor.id}, #{task.createUser.id}, #{task.attachment}, #{task.description}, #{task.content}, #{task.createTime}, #{task.completeTime},
        #{task.endTime}, #{task.isDelete});
    </insert>

    <update id="update">
        update task
        <set>
            <if test="task.name != null">name = #{task.name},</if>
            <if test="task.customer != null and task.customer.id != null">customer = #{task.customer.id},</if>
            <if test="task.state != null">state = #{task.state},</if>
            <if test="task.type != null">type = #{task.type},</if>
            <if test="task.level != null">level = #{task.level},</if>
            <if test="task.executor != null and task.executor.id != null">executor = #{task.executor.id},</if>
            <if test="task.createUser != null and task.createUser.id != null">createUser = #{task.createUser.id},</if>
            <if test="task.attachment != null">attachment = #{task.attachment},</if>
            <if test="task.description != null">description = #{task.description},</if>
            <if test="task.content != null">content = #{task.content},</if>
            <if test="task.createTime != null">createTime = #{task.createTime},</if>
            <if test="task.completeTime != null">completeTime = #{task.completeTime},</if>
            <if test="task.endTime != null">endTime = #{task.endTime},</if>
            isDelete = #{task.isDelete}
        </set>
        WHERE task.id = #{task.id}
    </update>

    <delete id="delete">
        delete from task where id in
        <foreach collection="taskIdList" item="taskId" index="index" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </delete>

</mapper>